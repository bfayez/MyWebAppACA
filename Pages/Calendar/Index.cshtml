@page
@model MyWebApp.Pages.Calendar.IndexModel
@{
    ViewData["Title"] = "Calendar";
}

<div class="container">
    <h1>@ViewData["Title"]</h1>
    <p>Manage your events and stay organized with our calendar!</p>

    @if (!string.IsNullOrEmpty(Model.Message))
    {
        <div class="alert alert-success" role="alert">
            @Model.Message
        </div>
    }

    <!-- Add Event Button -->
    <div class="mb-4">
        <a asp-page="/Calendar/CreateEvent" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Add New Event
        </a>
    </div>

    <!-- Calendar View - Always Display -->
    <div class="row">
        <div class="col-12">
            <h3>üìÖ Your Events (@Model.Events.Count)</h3>
            
            @{
                var today = DateTime.Today;
                var currentMonth = today.Month;
                var currentYear = today.Year;
                var firstDayOfMonth = new DateTime(currentYear, currentMonth, 1);
                var lastDayOfMonth = firstDayOfMonth.AddMonths(1).AddDays(-1);
                var firstDisplayDate = firstDayOfMonth.AddDays(-(int)firstDayOfMonth.DayOfWeek);
                var lastDisplayDate = lastDayOfMonth.AddDays(6 - (int)lastDayOfMonth.DayOfWeek);
                
                var todayEvents = Model.Events.Where(e => e.IsToday).OrderBy(e => e.StartDateTime).ToList();
                var upcomingEvents = Model.Events.Where(e => e.IsUpcoming).OrderBy(e => e.StartDateTime).Take(5).ToList();
                var pastEvents = Model.Events.Where(e => e.IsPast).OrderByDescending(e => e.StartDateTime).Take(5).ToList();
            }
            
            <!-- Simple Calendar Grid -->
            <div class="card mb-4">
                <div class="card-header text-center">
                    <h5 class="mb-0">@firstDayOfMonth.ToString("MMMM yyyy")</h5>
                </div>
                <div class="card-body p-0">
                    <table class="table table-bordered mb-0">
                        <thead class="table-light">
                            <tr>
                                <th class="text-center py-2">Sunday</th>
                                <th class="text-center py-2">Monday</th>
                                <th class="text-center py-2">Tuesday</th>
                                <th class="text-center py-2">Wednesday</th>
                                <th class="text-center py-2">Thursday</th>
                                <th class="text-center py-2">Friday</th>
                                <th class="text-center py-2">Saturday</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (var date = firstDisplayDate; date <= lastDisplayDate; date = date.AddDays(7))
                            {
                                <tr style="height: 100px;">
                                    @for (int i = 0; i < 7; i++)
                                    {
                                        var currentDate = date.AddDays(i);
                                        var dayEvents = Model.Events.Where(e => e.StartDateTime.Date == currentDate.Date).ToList();
                                        var isCurrentMonth = currentDate.Month == currentMonth;
                                        var isToday = currentDate.Date == today;
                                        
                                        <td class="align-top p-1 @(isCurrentMonth ? "" : "text-muted bg-light") @(isToday ? "border-primary border-2" : "")">
                                            <div class="d-flex flex-column h-100">
                                                <div class="fw-bold small text-center @(isToday ? "text-primary" : "")">
                                                    @currentDate.Day
                                                </div>
                                                <div class="flex-grow-1 overflow-hidden">
                                                    @foreach (var eventItem in dayEvents.Take(2))
                                                    {
                                                        <div class="badge bg-primary text-truncate d-block mb-1 small" 
                                                             title="@eventItem.Title - @eventItem.StartDateTime.ToString("HH:mm")">
                                                            @eventItem.StartDateTime.ToString("HH:mm") @eventItem.Title
                                                        </div>
                                                    }
                                                    @if (dayEvents.Count > 2)
                                                    {
                                                        <div class="small text-muted">+@(dayEvents.Count - 2) more</div>
                                                    }
                                                </div>
                                            </div>
                                        </td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            @if (Model.Events.Any())
            {
                <!-- Event List -->
                <div class="row">
                    <!-- Today's Events -->
                    <div class="col-md-4">
                        <h5 class="text-primary">üìç Today's Events</h5>
                        @if (todayEvents.Any())
                        {
                            @foreach (var eventItem in todayEvents)
                            {
                                <div class="card mb-2 border-primary">
                                    <div class="card-body p-3">
                                        <div class="d-flex justify-content-between align-items-start">
                                            <div class="flex-grow-1">
                                                <h6 class="card-title mb-1">@eventItem.Title</h6>
                                                @if (!string.IsNullOrEmpty(eventItem.Description))
                                                {
                                                    <p class="card-text text-muted small mb-2">@eventItem.Description</p>
                                                }
                                                <small class="text-muted">
                                                    @eventItem.StartDateTime.ToString("HH:mm") - @eventItem.EndDateTime.ToString("HH:mm")
                                                </small>
                                            </div>
                                            <form method="post" asp-page-handler="Delete" class="d-inline" 
                                                  onsubmit="return confirm('Are you sure you want to delete this event?')">
                                                <input type="hidden" name="id" value="@eventItem.Id" />
                                                <button type="submit" class="btn btn-outline-danger btn-sm" title="Delete">
                                                    üóëÔ∏è
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="alert alert-info" role="alert">
                                üìÖ No events today!
                            </div>
                        }
                    </div>

                    <!-- Upcoming Events -->
                    <div class="col-md-4">
                        <h5 class="text-success">‚è∞ Upcoming Events</h5>
                        @if (upcomingEvents.Any())
                        {
                            @foreach (var eventItem in upcomingEvents)
                            {
                                <div class="card mb-2 border-success">
                                    <div class="card-body p-3">
                                        <div class="d-flex justify-content-between align-items-start">
                                            <div class="flex-grow-1">
                                                <h6 class="card-title mb-1">@eventItem.Title</h6>
                                                @if (!string.IsNullOrEmpty(eventItem.Description))
                                                {
                                                    <p class="card-text text-muted small mb-2">@eventItem.Description</p>
                                                }
                                                <small class="text-muted">
                                                    @eventItem.StartDateTime.ToString("MMM dd, yyyy HH:mm")
                                                </small>
                                            </div>
                                            <form method="post" asp-page-handler="Delete" class="d-inline" 
                                                  onsubmit="return confirm('Are you sure you want to delete this event?')">
                                                <input type="hidden" name="id" value="@eventItem.Id" />
                                                <button type="submit" class="btn btn-outline-danger btn-sm" title="Delete">
                                                    üóëÔ∏è
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="alert alert-info" role="alert">
                                üìÖ No upcoming events!
                            </div>
                        }
                    </div>

                    <!-- Past Events -->
                    <div class="col-md-4">
                        <h5 class="text-secondary">üìù Past Events</h5>
                        @if (pastEvents.Any())
                        {
                            @foreach (var eventItem in pastEvents)
                            {
                                <div class="card mb-2 border-secondary">
                                    <div class="card-body p-3">
                                        <div class="d-flex justify-content-between align-items-start">
                                            <div class="flex-grow-1">
                                                <h6 class="card-title mb-1 text-muted">@eventItem.Title</h6>
                                                @if (!string.IsNullOrEmpty(eventItem.Description))
                                                {
                                                    <p class="card-text text-muted small mb-2">@eventItem.Description</p>
                                                }
                                                <small class="text-muted">
                                                    @eventItem.StartDateTime.ToString("MMM dd, yyyy HH:mm")
                                                </small>
                                            </div>
                                            <form method="post" asp-page-handler="Delete" class="d-inline" 
                                                  onsubmit="return confirm('Are you sure you want to delete this event?')">
                                                <input type="hidden" name="id" value="@eventItem.Id" />
                                                <button type="submit" class="btn btn-outline-danger btn-sm" title="Delete">
                                                    üóëÔ∏è
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="alert alert-secondary" role="alert">
                                üìù No past events!
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>
