@page
@model KanbanModel
@{
    ViewData["Title"] = "Kanban Board";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1>üóÇÔ∏è @ViewData["Title"]</h1>
            <p>Manage your project items with our visual Kanban board!</p>
        </div>
        <div>
            <a asp-page="/Kanban/AddItem" class="btn btn-primary me-2">
                <i class="bi bi-plus-circle"></i> Add New Item
            </a>
            <a asp-page="/Kanban/TeamMembers" class="btn btn-success">
                <i class="bi bi-people"></i> Manage Team Members (@Model.TeamMembers.Count)
            </a>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.Message))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @Model.Message
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Kanban Board -->
    <div class="row">
        @{
            var statuses = new[] { KanbanStatus.New, KanbanStatus.Active, KanbanStatus.Blocked, KanbanStatus.Completed };
            var statusColors = new Dictionary<KanbanStatus, string>
            {
                { KanbanStatus.New, "info" },
                { KanbanStatus.Active, "primary" },
                { KanbanStatus.Blocked, "warning" },
                { KanbanStatus.Completed, "success" }
            };
            var statusIcons = new Dictionary<KanbanStatus, string>
            {
                { KanbanStatus.New, "üìù" },
                { KanbanStatus.Active, "üöÄ" },
                { KanbanStatus.Blocked, "‚ö†Ô∏è" },
                { KanbanStatus.Completed, "‚úÖ" }
            };
        }

        @foreach (var status in statuses)
        {
            var items = Model.GetItemsByStatus(status);
            var colorClass = statusColors[status];
            var icon = statusIcons[status];

            <div class="col-lg-3 col-md-6 mb-4">
                <div class="card h-100">
                    <div class="card-header bg-@colorClass text-white">
                        <h6 class="mb-0">@icon @status (@items.Count())</h6>
                    </div>
                    <div class="card-body p-2" style="min-height: 400px; max-height: 600px; overflow-y: auto;">
                        @if (items.Any())
                        {
                            @foreach (var item in items)
                            {
                                <div class="card mb-2 border-@colorClass">
                                    <div class="card-body p-3">
                                        <h6 class="card-title mb-2">@item.Title</h6>
                                        @if (!string.IsNullOrEmpty(item.Description))
                                        {
                                            <p class="card-text small text-muted mb-2">@item.Description</p>
                                        }
                                        
                                        <!-- Assignment Info -->
                                        @{
                                            var assignedMember = Model.GetMemberById(item.AssignedToId);
                                        }
                                        <div class="mb-2">
                                            <small class="text-muted">
                                                Assigned to: 
                                                @if (assignedMember != null)
                                                {
                                                    <span class="badge bg-secondary">@assignedMember.Name</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Unassigned</span>
                                                }
                                            </small>
                                        </div>

                                        <small class="text-muted d-block mb-2">
                                            Created: @item.CreatedAt.ToShortDateString()
                                            @if (item.UpdatedAt.HasValue)
                                            {
                                                <text><br />Updated: @item.UpdatedAt.Value.ToShortDateString()</text>
                                            }
                                        </small>

                                        <!-- Actions -->
                                        <div class="btn-group w-100" role="group">
                                            <!-- Status Change Dropdown -->
                                            <div class="dropdown">
                                                <button class="btn btn-outline-@colorClass btn-sm dropdown-toggle" type="button" 
                                                        data-bs-toggle="dropdown" aria-expanded="false" title="Change Status">
                                                    Status
                                                </button>
                                                <ul class="dropdown-menu">
                                                    @foreach (var newStatus in statuses.Where(s => s != item.Status))
                                                    {
                                                        <li>
                                                            <form method="post" asp-page-handler="UpdateStatus" class="d-inline">
                                                                <input type="hidden" name="EditItemId" value="@item.Id" />
                                                                <input type="hidden" name="NewStatus" value="@newStatus" />
                                                                <button type="submit" class="dropdown-item">
                                                                    @statusIcons[newStatus] @newStatus
                                                                </button>
                                                            </form>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>

                                            <!-- Assignment Dropdown -->
                                            <div class="dropdown">
                                                <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" 
                                                        data-bs-toggle="dropdown" aria-expanded="false" title="Assign">
                                                    Assign
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li>
                                                        <form method="post" asp-page-handler="AssignMember" class="d-inline">
                                                            <input type="hidden" name="itemId" value="@item.Id" />
                                                            <input type="hidden" name="memberId" value="" />
                                                            <button type="submit" class="dropdown-item">Unassigned</button>
                                                        </form>
                                                    </li>
                                                    @foreach (var member in Model.TeamMembers)
                                                    {
                                                        <li>
                                                            <form method="post" asp-page-handler="AssignMember" class="d-inline">
                                                                <input type="hidden" name="itemId" value="@item.Id" />
                                                                <input type="hidden" name="memberId" value="@member.Id" />
                                                                <button type="submit" class="dropdown-item 
                                                                    @(item.AssignedToId == member.Id ? "active" : "")">
                                                                    @member.Name
                                                                </button>
                                                            </form>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>

                                            <!-- Delete Button -->
                                            <form method="post" asp-page-handler="Delete" class="d-inline">
                                                <input type="hidden" name="id" value="@item.Id" />
                                                <button type="submit" class="btn btn-outline-danger btn-sm" 
                                                        title="Delete Item"
                                                        onclick="return confirm('Are you sure you want to delete this item?')">
                                                    üóëÔ∏è
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="text-center text-muted p-3">
                                <p>No items in @status status</p>
                                @if (status == KanbanStatus.New)
                                {
                                    <small>New items will appear here</small>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Summary Statistics -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">üìä Board Summary</h5>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-6 col-md-3">
                            <div class="bg-info text-white p-3 rounded">
                                <h4>@Model.GetItemsByStatus(KanbanStatus.New).Count()</h4>
                                <small>New</small>
                            </div>
                        </div>
                        <div class="col-6 col-md-3">
                            <div class="bg-primary text-white p-3 rounded">
                                <h4>@Model.GetItemsByStatus(KanbanStatus.Active).Count()</h4>
                                <small>Active</small>
                            </div>
                        </div>
                        <div class="col-6 col-md-3">
                            <div class="bg-warning text-white p-3 rounded">
                                <h4>@Model.GetItemsByStatus(KanbanStatus.Blocked).Count()</h4>
                                <small>Blocked</small>
                            </div>
                        </div>
                        <div class="col-6 col-md-3">
                            <div class="bg-success text-white p-3 rounded">
                                <h4>@Model.GetItemsByStatus(KanbanStatus.Completed).Count()</h4>
                                <small>Completed</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>